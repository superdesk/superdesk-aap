name: "CI"

on:
  [push, pull_request]

jobs:
  server:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - run: |
          sudo apt-get update
          sudo apt-get -y install libxml2-dev libxmlsec1-dev libxmlsec1-openssl libexempi-dev unixodbc unixodbc-dev
      - run: docker-compose -f ../.github/docker-compose.yml up -d
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('server/dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip
            ${{ runner.os }}-
      - run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install -r dev-requirements.txt
      - run: nosetests
      - run: behave ./features/ --format progress2 --logging-level ERROR
      - run: python manage.py app:initialize_data
      - run: python manage.py users:create -u test -p test -e test@localhost --admin

  client:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm
            ${{ runner.os }}-
      - run: npm install --no-audit
      - run: npm run build
